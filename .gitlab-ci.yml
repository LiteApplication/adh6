image: python:3.7-stretch

cache:
  paths:
    - ~/.cache/pip 

# We declare a job that gitlab ignores and put a YAML anchor
# See https://gitlab.com/gitlab-org/gitlab-ce/issues/15403#note_27079119
.setup_test_jobs: &before_test_job
  before_script:
    - pip install -r api_server/requirements.txt

stages:
  - test
  - build
  - deploy


angular_try_build:
  stage: build
  image: node:10.16.0-stretch-slim
  before_script:
    - cd frontend_angular/
    - NG_CLI_ANALYTICS=ci npm install -g @angular/cli@8.0.1
    - npm install
  script:
    - cat src/app/config/auth.config.template.ts | envsubst | tee src/app/config/auth.config.ts
    - rm src/app/config/auth.config.template.ts
    - ng build --prod
  artifacts:
    paths:
    - dist/
    expire_in: 1 day

python_check_for_vuln_deps:
  stage: test
  # <<: *before_test_job # We reference our previous anchor
  script:
  - cd api_server/
  - pip install safety
  - safety check -r requirements.txt
  - safety check

python_unit_test:
  stage: test
  <<: *before_test_job # We reference our previous anchor
  script:
  - cd api_server/
  - pytest test/unit -vv

python_integration_test:
  stage: test
  <<: *before_test_job # We reference our previous anchor
  script:
  - cd api_server/
  - apt update -q
  - apt install -qy sqlite3 libmariadbclient-dev
  - pytest test/integration -vv

python_coverage:
  stage: test
  <<: *before_test_job # We reference our previous anchor
  script:
  - cd api_server/
  - pip install pytest-cov
  - pytest -vv --cov=src --cov-report=html --cov-report=term --cov-fail-under=80
  coverage: '/^TOTAL\s+.*\s+(\d+\.?\d*)%/'
  artifacts:
    paths:
      - api_server/htmlcov/

deploy_dev:
  stage: deploy
  script:
    - docker-compose -f docker-compose-deploy.yml build
    - docker-compose -f docker-compose-deploy.yml down
    - docker-compose -f docker-compose-deploy.yml up --force-recreate -d 
  only:
    - master
  environment:
    name: development
    url: https://adh6-dev.minet.net/
  tags:
    - dev

deploy_prod_front:
  stage: deploy
  when: manual
  before_script:
    - cd /var/www
  script:
    - wget https://gitlab.minet.net/adh6/core/-/jobs/artifacts/master/download?job=angular_try_build
  environment:
    name: production
    url: https://adh6.minet.net/
  tags:
    - adh6-prod
    - adh6-frontend

deploy_prod_backend:
  stage: deploy
  when: manual
  before_script:
    - sudo systemctl stop emperor.uwsgi.service
    - cd api_server/
    - sudo pip3 install -r ./requirements.txt
  script:
    - /usr/local/bin/mibdump.py CISCO-VLAN-MEMBERSHIP-MIB IF-MIB CISCO-MAC-AUTH-BYPASS-MIB
    - cp ../openapi/spec.yaml ./openapi/spec.yaml
    - cat config/CONFIGURATION.template.py | envsubst | tee config/CONFIGURATION.py
    - cat uwsgi-prod.template | envsubst | tee uwsgi-prod.ini
  after_script:
    - sudo rm /etc/uwsgi/vassals/adh6_api.ini
    - sudo ln -s $(pwd)/uwsgi-prod.ini /etc/uwsgi/vassals/adh6_api.ini
    - sudo systemctl start emperor.uwsgi.service
  only:
    - master
  environment:
    name: production
    url: https://adh6.minet.net/
  tags:
    - adh6-prod
    - adh6-backend
