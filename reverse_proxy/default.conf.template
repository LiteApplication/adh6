map $http_accept_language $lang {
  default fr;
  ~en en;
}

upstream adh6_frontend {
  server ${FRONTEND_HOST}:${FRONTEND_PORT};
}

upstream adh6_api {
	server ${API_HOST}:${API_PORT};
}

upstream adh6_api_member {
	server ${API_MEMBER_HOST}:${API_PORT};
}

server {
        listen          80;
        listen          [::]:80;
        server_name     ${ADH6_URL};
        rewrite         ^(.*)$ https://$host$1 permanent;
}

server {
  listen          443 ssl http2;
  listen          [::]:443 ssl http2;
  server_name     ${ADH6_URL};
  ssl_certificate     /etc/ssl/certs/adh6.crt;
  ssl_certificate_key /etc/ssl/private/adh6.key;

  client_body_temp_path /tmp/client_body;
  fastcgi_temp_path     /tmp/fastcgi;
  proxy_temp_path       /tmp/proxy;
  scgi_temp_path        /tmp/scgi;
  uwsgi_temp_path       /tmp/uwsgi;
  gzip  on;
	gzip_http_version 1.0;
	gzip_comp_level 2;
	gzip_min_length 1100;
	gzip_buffers     4 8k;
	gzip_proxied any;
	gzip_types
		# text/html is always compressed by HttpGzipModule
		text/css
		text/javascript
		text/xml
		text/plain
		text/x-component
		application/javascript
		application/json
		application/xml
		application/rss+xml
		font/truetype
		font/opentype
		application/vnd.ms-fontobject
		image/svg+xml;

	gzip_static on;
	gzip_proxied        expired no-cache no-store private auth;
	gzip_disable        "MSIE [1-6]\.";
	gzip_vary           on;
  location /api/member {
    include uwsgi_params;
		uwsgi_request_buffering off;
		uwsgi_pass adh6_api_member;
		
		# Force nginx a aussi passer les headers
		# Authorization est le header contenant le token pour authentifier les utilisateurs
		include uwsgi_params;
		uwsgi_pass_header Authorization;
		uwsgi_pass_request_headers on;

  }
  location /api {
    include uwsgi_params;
		uwsgi_request_buffering off;
		uwsgi_pass adh6_api;
		
		# Force nginx a aussi passer les headers
		# Authorization est le header contenant le token pour authentifier les utilisateurs
		include uwsgi_params;
		uwsgi_pass_header Authorization;
		uwsgi_pass_request_headers on;

  }
  location = / {
		return 302      /$lang/;
	}
	location / {
    	add_header 'Access-Control-Allow-Origin' '*';
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_pass http://adh6_frontend/;
  }
}
