# Si vous voulez ajouter plus d'instances d'un des services, faites le ici
# et nginx load-balancera les requetes.
upstream adh6_frontend {
  server frontend_angular:8443;
}

upstream adh6_oauth {
	server authentication_server:443;
}

upstream adh6_api {
	server api_server:443;
}

# Permet de mettre en cache le frontend d'ADH6
#proxy_cache_path  /tmp/adh6_cache  levels=1:2    keys_zone=adh6_cache:10m
#    inactive=24h  max_size=1g;

# Redirige tout le trafic en http en httpS.
server {
        listen          80;
        listen          [::]:80;
        server_name     localhost;

        rewrite         ^(.*)$ https://$host$1 permanent;
}

server {
        listen          443 ssl;
        listen          [::]:443 ssl;
        server_name     localhost;
        ssl_certificate     /etc/ssl/certs/adh6.crt;
        ssl_certificate_key /etc/ssl/private/adh6.key;

        client_body_temp_path /tmp/client_body;
        fastcgi_temp_path     /tmp/fastcgi;
        proxy_temp_path       /tmp/proxy;
        scgi_temp_path        /tmp/scgi;
        uwsgi_temp_path       /tmp/uwsgi;

        location /oauth {
		include uwsgi_params;
                uwsgi_ssl_protocols TLSv1.2;
		uwsgi_request_buffering off;
		uwsgi_pass suwsgi://adh6_oauth;
	}

        location /api {
		include uwsgi_params;
		uwsgi_request_buffering off;
		uwsgi_pass suwsgi://adh6_api; 
		
		# Force nginx a aussi passer les headers
		# Authorization est le header contenant le token pour authentifier les utilisateurs
		include uwsgi_params;
		uwsgi_pass_header Authorization;
		uwsgi_pass_request_headers on;
        }

	location / {
		# Ces lignes sont temporairement desactivees pour faciliter le dev.
		# (en gros ca permet de voir ses changements direct au lieu d'avoir du cache)
	
		# Met en cache le site
		#proxy_cache adh6_cache;
		#proxy_cache_valid 200 1d;

		# Permet de servir ADH6 a partir du cache meme si le site est down
		#proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

		# Active la mise en cache sur le browser
		#expires 7d;

		proxy_pass https://adh6_frontend;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
        }

}
